[{"title":"Hello World","date":"2023-01-31T08:19:48.878Z","path":"2023/01/31/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"[1.17.1]Minecraft数据包---夜视仪","date":"2021-08-12T15:19:22.000Z","path":"2021/08/12/1-17-1-Minecraft数据包-夜视仪/","text":"另一个着色器实例，尝试做了个夜视仪。但是其实完全没有夜视的效果啊，只是把屏幕变绿了而已XD，但是观感还是不错的，这也得亏深度缓冲。 效果演示B站视频演示： https://www.bilibili.com/video/BV1464y1q7NE 大致原理当玩家戴着一个特殊帽子的时候，在玩家面前生成发光实体，然后调用着色器。帽子的判断使用断言。当玩家戴着特定帽子时，断言通过。 12345678910111213&#123; &quot;condition&quot;: &quot;minecraft:entity_properties&quot;, &quot;entity&quot;: &quot;this&quot;, &quot;predicate&quot;: &#123; &quot;equipment&quot;: &#123; &quot;head&quot;: &#123; &quot;items&quot;: [&quot;leather_helmet&quot;], &quot;count&quot;: 1, &quot;nbt&quot;: &quot;&#123;id:\\&quot;nvh:helmet\\&quot;&#125;&quot; &#125; &#125; &#125;&#125; 然后刷发光实体，并且糊到玩家脸上。但是这个方案并不完备，由于tp的延迟，如果玩家快速转动视角，实体就会离开玩家视野然后导致着色器失效一瞬间，观感不是很好。解决方法是检测模型材质来实现的，把模型放的足够大就可以基本避免着色器失效。 123execute as @a at @s if entity @s[predicate=nvh:helmet] unless entity @e[type=armor_stand,tag=nvh-marker] run summon armor_stand ^ ^ ^5 &#123;NoAI:1b,Tags:[&quot;nvh-marker&quot;],Small:1,Marker:1,Invisible:1&#125;execute as @a[predicate=nvh:helmet] at @s anchored eyes run tp @e[type=armor_stand,tag=nvh-marker,limit=1] ^ ^ ^5execute as @a at @s unless entity @s[predicate=nvh:helmet] if entity @e[type=armor_stand,tag=nvh-marker] run tp @e[type=armor_stand,tag=nvh-marker] ~ ~-366 ~ 然后调用发光效果的着色器 123456789101112131415161718192021222324252627#minecraft/shaders/post/entity_outline.json&#123; &quot;targets&quot;: [ &quot;swap&quot;, &quot;final&quot; ], &quot;passes&quot;: [ &#123; &quot;name&quot;: &quot;entity_outline&quot;, &quot;intarget&quot;: &quot;final&quot;, &quot;outtarget&quot;: &quot;swap&quot;, &quot;auxtargets&quot;: [ &#123; &quot;name&quot;:&quot;DiffuseDepthSampler&quot;, &quot;id&quot;: &quot;minecraft:main:depth&quot; &#125; ] &#125;, &#123; &quot;name&quot;: &quot;blit&quot;, &quot;intarget&quot;: &quot;swap&quot;, &quot;outtarget&quot;: &quot;final&quot; &#125; ]&#125; 可以看到，在entity_outline当中调用了深度缓冲。在program的entity_outline中进行相关设置，同时使用片段着色器night_vision。 12345678910111213141516171819202122#minecraft/shaders/post/night_vision.fsh#version 150uniform sampler2D DiffuseSampler;uniform sampler2D DiffuseDepthSampler;in vec2 texCoord;out vec4 fragColor;void main()&#123; float fromcenter = distance(texCoord, vec2(0.5,0.5)); float color = (1.0 - texture(DiffuseDepthSampler, texCoord).r) * 15.0; if (fromcenter &lt; 0.62)&#123; fragColor = vec4(0.0, color + 0.1, color - 0.1, 0.9); &#125; else if (fromcenter &gt;= 0.62)&#123; fragColor = vec4(0.0, 0.0, 0.0, 0.99); &#125;&#125; 获取了屏幕上每个像素点到中心的距离，若小于等于0.62，则输出夜视画面的主体（深度缓冲）。若大于0.62，则输出黑色像素，作为周围的一个边框。根据这个原理，原版的发光效果就没法用了:(，因为一旦玩家视野内出现发光实体，就会触发着色器，所以这个包也就是娱乐向的XD同样通过识别模型材质可以躲过这个问题，不过等我有空再试吧。原版的shader限制还是有很多的，不过在地图创作方面也确实是极大丰富了视觉效果。 鸣谢 ch2的深度缓冲教程 其他所有的shader教程 datapack链接: https://pan.baidu.com/s/1X23epcmeNake3GpkTF1C7Q提取码: f5pp","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"[1.17.1]Minecraft资源包-着色器实例","date":"2021-07-29T23:48:19.000Z","path":"2021/07/30/1-17-1-Minecraft资源包-着色器实例/","text":"最近学了一些着色器的使用，扒教程时由于没有编程相关的基础，看GLSL的一些东西确实费劲。现在的水平也只是会改改数据而已，做出自己想要的效果还不能实现。另外虽然这是资源包的部分，但是我写这个毕竟是为了数据包的效果服务，所以tag还是commands。 效果演示B站视频演示： https://www.bilibili.com/video/BV1bb4y1r7Q1 大致原理利用全局量GameTime来实现动画效果。GameTime是一个从0增加到1200并循环的量，配合三角函数就能实现-1到1的循环变化，然后在相关核心着色器当中引入GameTime来实现rgb变色。 1234567891011121314151617181920212223242526272829#minecraft/shaders/core/rendertype_lines.json&#123; &quot;blend&quot;: &#123; &quot;func&quot;: &quot;add&quot;, &quot;srcrgb&quot;: &quot;srcalpha&quot;, &quot;dstrgb&quot;: &quot;1-srcalpha&quot; &#125;, &quot;vertex&quot;: &quot;rendertype_lines&quot;, &quot;fragment&quot;: &quot;rendertype_lines&quot;, &quot;attributes&quot;: [ &quot;Position&quot;, &quot;Color&quot;, &quot;Normal&quot; ], &quot;samplers&quot;: [ ], &quot;uniforms&quot;: [ &#123; &quot;name&quot;: &quot;ModelViewMat&quot;, &quot;type&quot;: &quot;matrix4x4&quot;, &quot;count&quot;: 16, &quot;values&quot;: [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;ProjMat&quot;, &quot;type&quot;: &quot;matrix4x4&quot;, &quot;count&quot;: 16, &quot;values&quot;: [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;ColorModulator&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 4, &quot;values&quot;: [ 1.0, 1.0, 1.0, 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;LineWidth&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 1, &quot;values&quot;: [ 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;ScreenSize&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 2, &quot;values&quot;: [ 1.0, 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;FogStart&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 1, &quot;values&quot;: [ 0.0 ] &#125;, &#123; &quot;name&quot;: &quot;FogEnd&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 1, &quot;values&quot;: [ 1.0 ] &#125;, &#123; &quot;name&quot;: &quot;FogColor&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 4, &quot;values&quot;: [ 0.0, 0.0, 0.0, 0.0 ] &#125;, &#123; &quot;name&quot;: &quot;GameTime&quot;, &quot;type&quot;: &quot;float&quot;, &quot;count&quot;: 1, &quot;values&quot;: [0.0] &#125; ]&#125; 能够看到在uniforms最后引入了GameTime。 123456789101112131415161718192021222324#minecraft/shaders/core/rendertype_lines.fsh#version 150#moj_import &lt;fog.glsl&gt;uniform vec4 ColorModulator;uniform float FogStart;uniform float FogEnd;uniform vec4 FogColor;uniform float GameTime;in float vertexDistance;in vec4 vertexColor;out vec4 fragColor;void main() &#123; vec4 color = vertexColor * ColorModulator; vec4 line_color = vec4(sin(GameTime * 2000), cos(GameTime * 2000), tan(GameTime * 2000), 0.0) + color; fragColor = linear_fog(line_color, vertexDistance, FogStart, FogEnd, FogColor);&#125; 在相应的片段着色器（rendertype_lines，用以修改实体轮廓和方块边缘轮廓）中引入GameTime，然后引入一个四元向量line_color,用GameTime和三角函数做出循环变量，然后和原来的color相加。其实应该可以直接改color的，但是我试了一下效果不是很好（？），不知道为什么。同时我这个三角函数也是瞎套的，变色范围没有黄色，但是效果看起来还是不错的XD。还有另一个挖方块变色的原理是一样的，修改片段着色器（rendertype_crumbling）来实现的。 鸣谢 所有的着色器教程 qlkyyds vsc的glsl语法高亮 resource链接: https://pan.baidu.com/s/1gppn4DX5NKTH11Ke1XTL_Q提取码: a35q","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"换新logo","date":"2021-06-08T15:51:02.000Z","path":"2021/06/08/换新logo/","text":"如题，自己随便想到了一个新的方案，就试一下，感觉还不错。 我一直比较喜欢简约，但又有高级感的logo，所以换来换去也还是Ar两个字母罢了，这次也不例外。主要是在字母的形状和笔触的方面做了点改动吧，我自己看着还可以。由于没决定好配色，就干脆来两种，不过倒也差不多的。然后就是把各个平台的头像都换掉了，毕竟我就是喜欢瞎折腾 :D 另外确实是很长时间没碰命令了，甚至连mc都没玩过。学业压力很重，没时间写数据包了。 :(","tags":[{"name":"strange","slug":"strange","permalink":"http://yoursite.com/tags/strange/"}]},{"title":"[1.16.5]Minecraft数据包---装备耐久可视化","date":"2021-02-23T03:07:30.000Z","path":"2021/02/23/1-16-5-Minecraft数据包-装备耐久可视化/","text":"该数据包及配套资源包允许玩家在游戏界面上能直接看到装备以及耐久度的情况。该数据包隶属于 cAsual woRk (3&#x2F;99) 效果演示B站视频演示： https://www.bilibili.com/video/bv1ji4y1T7ry 大致原理通过字体黑科技在actionbar显示图片，反向空格调整到适合位置。然后生成4个药水云，分别检测玩家的4个装备槽位，并且更改药水云的名字 123456789# eqv:mainexecute as @a at @s unless entity @s[predicate=eqv:helmet] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue103&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:leather_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue120&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:chainmail_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue10A&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:golden_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue10F&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:iron_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue113&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:diamond_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue117&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:netherite_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue11B&quot;&#125;&#x27;&#125;execute as @a at @s if data entity @s Inventory.[&#123;Slot:103b,id:&quot;minecraft:turtle_helmet&quot;,Count:1b&#125;] run data merge entity @e[type=area_effect_cloud,limit=1,tag=eqv-helmet,distance=..1] &#123;CustomName:&#x27;&#123;&quot;text&quot;: &quot;\\\\ue11C&quot;&#125;&#x27;&#125; 值得注意的是，由于头上可以戴很多奇怪的东西，所以写个断言来处理所有无效物品的情况。然后再生成4个药水云，用于显示装备耐久条。令药水云分别把对应装备的Damage存到计分板，然后就是简单粗暴的穷举（ ,判断装备然后对应比较现在的Damage位于哪个区间并显示耐久条 12345678910111213141516171819202122232425# eqv:mainexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if entity @a[distance=..1,limit=1,predicate=eqv:helmet] run execute as @s store result score @s eqv-durability run data get entity @a[distance=..1,limit=1,predicate=eqv:helmet] Inventory.[&#123;Slot:103b&#125;].tag.Damage execute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:leather_helmet&quot;,Count:1b&#125;] run function eqv:helmet/leatherexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:chainmail_helmet&quot;,Count:1b&#125;] run function eqv:helmet/chainmailexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:golden_helmet&quot;,Count:1b&#125;] run function eqv:helmet/goldenexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:iron_helmet&quot;,Count:1b&#125;] run function eqv:helmet/ironexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:diamond_helmet&quot;,Count:1b&#125;] run function eqv:helmet/diamondexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:netherite_helmet&quot;,Count:1b&#125;] run function eqv:helmet/netheriteexecute as @e[type=area_effect_cloud,tag=eqv-h-d] at @s if data entity @a[limit=1,distance=..1] Inventory.[&#123;Slot:103b,id:&quot;minecraft:turtle_helmet&quot;,Count:1b&#125;] run function eqv:helmet/turtle# eqv:helmet/goldenexecute as @s if score @s eqv-durability matches 1..6 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue121&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 7..11 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue122&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 12..16 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue123&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 17..21 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue124&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 22..27 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue125&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 28..32 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue126&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 33..37 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue127&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 38..42 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue128&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 43..48 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue129&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 49..53 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue12A&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 54..58 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue12B&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 59..64 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue12C&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 65..69 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue12D&quot;&#125;&#x27;&#125;execute as @s if score @s eqv-durability matches 73..77 run data merge entity @s &#123;CustomName:&#x27;&#123;&quot;text&quot;:&quot;\\\\ue12E&quot;&#125;&#x27;&#125; 这种做法是非常naive的方案，不过好就好在非常无脑XD。可能会导致耐久条显示可能和实际有些出入，但是大体上的范围是差不多的。同样的方法操作下来，我们就会得到8个有不同名字的药水云，然后使用title里的selector显示他们的名字，配以反向空格调整位置。 1execute as @a at @s run title @s actionbar [&quot;&quot;,&#123;&quot;text&quot;: &quot;\\ue102&quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-helmet,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot;\\ue101&quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-h-d,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot; &quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-chestplate,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot;\\ue100&quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-c-d,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot; &quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-leggings,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot;\\ue101&quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-l-d,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot; &quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-boots,distance=..1,limit=1]&quot;&#125;,&#123;&quot;text&quot;:&quot;\\ue100&quot;&#125;,&#123;&quot;selector&quot;:&quot;@e[type=area_effect_cloud,tag=eqv-b-d,distance=..1,limit=1]&quot;&#125;] 当然，由于位置关系是我用眼看着大概写的，所以难免会有点误差，但是我又不是强迫症XD。另外，我本来是想通过类似”245 &#x2F; 562”这样的方式来显示耐久的，但是我一用ttf字体，mc就直接崩溃，作罢。 鸣谢 国外大佬的潜影盒显示黑科技给我的灵感和一些思路 黑猫的字体艺术教程 dhp好用 datapack链接: https://pan.baidu.com/s/1e7yhgb4R77ynFKj3P73TiA提取码: itaf","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"[1.15.2]Minecraft数据包---蓄力靴","date":"2020-08-07T15:55:48.000Z","path":"2020/08/07/1-15-2-Minecraft数据包-蓄力靴/","text":"该数据包增加了物品：蓄力靴，能够让玩家通过潜行蓄力高跳 效果演示B站视频演示： https://www.bilibili.com/video/BV19f4y1X7zP 大致原理玩家蓄力，记分板加分，然后递归刷slime，最后刷个火球slime的挤压效果比较弱的，所以递归刷很多才能比较明显的体现，但是火球的效果非常的大，所以只是在最后刷了一个，即便如此，还是飞得很高。 12345678execute as @s at @s anchored feet positioned ^ ^ ^-0.3 run summon slime ~ ~-0.3 ~ &#123;Invulnerable:1b,NoAI:1b,Size:4,Tags:[&quot;boost-marker&quot;],ActiveEffects:[&#123;Id:14,Amplifier:1b,Duration:9999,ShowParticles:false&#125;]&#125;effect give @e[type=slime,tag=boost-marker] resistance 9999 10 trueeffect give @e[type=slime,tag=boost-marker] invisibility 9999 10 trueexecute as @s at @s run scoreboard players remove @s upboots-sneak 1execute as @s[scores=&#123;upboots-sneak=1..&#125;] at @s run function upboots:jumpexecute as @a[scores=&#123;upboots-sneak=0&#125;,tag=!fireball] at @s run summon fireball ~ ~0.3 ~ &#123;Motion:[0.0d,-1.2d,0.0d],NoGravity:1b,Invulnerable:1b,ExplosionPower:-1,direction:[0.0d,-1.2d,0.0d]&#125;execute as @a[scores=&#123;upboots-sneak=0&#125;] at @s run tag @s add fireball 火球的 ExplosionPower 标签决定了它的爆炸威力，只能设置为整数，数值越大效果越强，但是如果为负值，就会威力很小，但是有很强的击退效果，这个datapack正是利用了这一点。不过这东西不稳定而且也不好控制，所以局限性还是挺大的。 然后就没了，剩下一点后续的处理和一些actionbar的提示之类的。毕竟做的也很粗糙。这个小玩意我写了两个版本，因为第一个版本实在不太行，基本没有竖直的高度变化，只能平地前进，令人很不爽。不过用了火球黑科技之后效果就好多了，这也就是这个datapack的核心之处。 鸣谢 dhp真好用 很早之前某帖子给我的灵感，火球黑科技真是太棒了 datapack链接：https://pan.baidu.com/s/1L3PkoDUZv_UH18rBxK_VsQ提取码：dp31","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"换个图床","date":"2020-04-28T07:12:37.000Z","path":"2020/04/28/换个图床/","text":"之前是用七牛的云储存的当图床的，速度倒是很快，不过前段时间到期了然后我才发现七牛的域名每半个月回收一次，这就很烦了，总不能半个月重新改一遍链接吧然后又不想放在本地，github的加载速度不慢却也不能说快，所以改成图床了。 至于图床的选择，最开始是打算用sm.ms的，但是据说由于滥用，速度慢了点。而且当时去看的时候，主页加载半天没加载出来，所以放弃。 在网上搜了搜，最后选定了路过图床imgchr.com注册了个账号，放了几张图上去，速度测试还可以。虽然说一开始由于自己使用方法的错误，一度以为图床加载速度很慢虽然说每次更新文章都要手动传图片，加链接，不过毕竟我这更新速度也慢，图片也少，所以问题还是不大的XD 2020.5.5 更新头图的加载速度还是不能让我满意，所以去找了一下其他的图床然后发现了一个新开的图床img.rruu.net速度还不错，而且支持Picgo，所以又把图片全转过去了，之后有空再处理一下Picgo的对接，就不会再改动了。 2021.2.25 更新过了快一年了，我总算是把PicGo的处理弄好了。咕到现在，其实就是懒啦但是我感觉似乎也没有太多的便利，因为图片还要先压缩一遍。可能对图片处理量比较大的blog会有比较明显吧。体验不是很好，给图片重命名的时候卡死了（而且传图的速度很慢，我感觉我打开网页-上传-复制链接的速度和这个其实差不多有的时候会上传失败，总之就是不太好用:( 2021.6.9 更新如优图床好像不能用了，作者的网站也隔上墙了，我怀疑是因为被搞了。所以去注册了经典sm.ms的图床，还是很快的。 2021.8.26 更新如优图床原生的图片地址已经失效，但是阿里的图片地址还好用。由于如优图床已经爆炸，所以把失效图片全迁移到sm.ms了，幸好之前的图片都有存档。","tags":[{"name":"strange","slug":"strange","permalink":"http://yoursite.com/tags/strange/"}]},{"title":"[1.15.2]Minecraft数据包---原版箱子菜单","date":"2020-04-24T02:05:22.000Z","path":"2020/04/24/1-15-2-Minecraft数据包-原版箱子菜单/","text":"该数据包允许玩家较为容易的创建一个自定义的箱子菜单。并且可以自定义点击物品执行命令。 效果演示B站视频演示： https://www.bilibili.com/video/BV1qT4y1G79T 使用 12/function chestmenu:on/function chestmenu:off 来开&#x2F;关系统，在系统关闭情况下，无法使用箱子菜单 使用 12/function chestmenu:store_chest/function chestmenu:store_minecart 来创建箱子菜单&#x2F;箱子矿车菜单，可自定义其中物品，摆出一个对称的菜单界面 :D 然后通过 1/function chestmenu:upload 上传箱子菜单 使用 12/function chestmenu:export_chest/function chestmenu:export_minecart 来创建箱子菜单&#x2F;矿车菜单 然后开发者可以在datapacks\\chestmenu\\data\\chestmenu\\functions\\main修改对应物品格对应的命令就是那两块无聊的穷举啦 大致原理首先生成储存物品的箱子&#x2F;箱子矿车，玩家摆好物品后使用命令将Items标签上传至天上的箱子矿车存起来Items标签会加上不同tag存两份，以便于后续进行比对 123456789101112131415161718#chestmenu:upload#储存-箱子execute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run data modify block ~ ~ ~ Items.[] merge value &#123;tag:&#123;id:&quot;cm-tag1&quot;&#125;&#125;execute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run data modify entity @e[type=chest_minecart,tag=cm-tag1,limit=1] Items set from block ~ ~ ~ Itemsexecute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run data remove block ~ ~ ~ Item.[].tag.idexecute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run data modify block ~ ~ ~ Items.[] merge value &#123;tag:&#123;id:&quot;cm-item&quot;&#125;&#125;execute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run data modify entity @e[type=chest_minecart,tag=cm-tag2,limit=1] Items set from block ~ ~ ~ Itemsexecute as @e[type=area_effect_cloud,tag=cm-store,limit=1] at @s run setblock ~ ~ ~ air replace#矿车execute as @e[type=chest_minecart,tag=cm-store,limit=1] at @s run data modify entity @s Items.[] merge value &#123;tag:&#123;id:&quot;cm-tag1&quot;&#125;&#125;execute as @e[type=chest_minecart,tag=cm-store,limit=1] at @s run data modify entity @e[type=chest_minecart,tag=cm-tag3,limit=1] Items set from entity @s Itemsexecute as @e[type=chest_minecart,tag=cm-store,limit=1] at @s run data remove entity @s Item.[].tag.idexecute as @e[type=chest_minecart,tag=cm-store,limit=1] at @s run data modify entity @s Items.[] merge value &#123;tag:&#123;id:&quot;cm-item&quot;&#125;&#125;execute as @e[type=chest_minecart,tag=cm-store,limit=1] at @s run data modify entity @e[type=chest_minecart,tag=cm-tag4,limit=1] Items set from entity @s Itemstellraw @s [&quot;&quot;,&#123;&quot;text&quot;:&quot;=上传成功=&quot;,&quot;color&quot;:&quot;red&quot;,&quot;bold&quot;:true&#125;]kill @e[type=chest_minecart,tag=cm-store] 然后玩家创建菜单，将菜单中的物品高频覆盖原来模板中的物品如果菜单物品与模板物品一致，那么检测不到模板物品如果玩家拿走某物品，那么即可检测到对应的模板物品，然后获取slot转成分数执行一遍命令最后把模板物品覆盖到菜单里，恢复原样(思路由雨弓提供XD) 1234567891011#chestmenu:main#aec,导出与对比execute as @e[type=area_effect_cloud,tag=cm-export] at @s run data modify entity @e[type=chest_minecart,tag=cm-compare,limit=1] Items set from entity @e[type=chest_minecart,tag=cm-tag1,limit=1] Itemsexecute as @e[type=area_effect_cloud,tag=cm-export] at @s run data modify entity @e[type=chest_minecart,tag=cm-compare,limit=1] Items append from block ~ ~ ~ Items.[]#minecart,导出与对比execute as @e[type=chest_minecart,tag=cm-export] at @s run data modify entity @e[type=chest_minecart,tag=cm-compare2,limit=1] Items set from entity @e[type=chest_minecart,tag=cm-tag3,limit=1] Itemsexecute as @e[type=chest_minecart,tag=cm-export] at @s run data modify entity @e[type=chest_minecart,tag=cm-compare2,limit=1] Items append from entity @s Items.[] 如果系统关闭后，maker被删掉，箱子菜单无法使用，会出现提示内容 1234567execute as @e[type=area_effect_cloud,tag=cm-export] at @s run data modify block ~ ~ ~ Items set from entity @e[type=chest_minecart,tag=cm-tag2,limit=1] Itemsexecute as @e[type=area_effect_cloud,tag=cm-export] at @s unless entity @e[type=chest_minecart,tag=cm-compare] run tellraw @p [&quot;&quot;,&#123;&quot;text&quot;:&quot;哦吼，ChestMenu系统好像坏掉勒\\n&quot;,&quot;color&quot;:&quot;gold&quot;&#125;,&#123;&quot;text&quot;:&quot;请使用 &quot;,&quot;color&quot;:&quot;gold&quot;&#125;,&#123;&quot;text&quot;:&quot;/function chestmenu:on &quot;,&quot;color&quot;:&quot;red&quot;,&quot;blod&quot;:true&#125;,&#123;&quot;text&quot;:&quot;以重置系统&quot;,&quot;color&quot;:&quot;gold&quot;&#125;]execute as @e[type=area_effect_cloud,tag=cm-export] at @s unless entity @e[type=chest_minecart,tag=cm-compare] run fill ~ ~ ~ ~ ~ ~ air replace minecraft:chestexecute as @e[type=chest_minecart,tag=cm-export] at @s run data modify entity @s Items set from entity @e[type=chest_minecart,tag=cm-tag4,limit=1] Itemsexecute as @e[type=chest_minecart,tag=cm-export] at @s unless entity @e[type=chest_minecart,tag=cm-compare2] run tellraw @p [&quot;&quot;,&#123;&quot;text&quot;:&quot;哦吼，ChestMenu系统好像坏掉勒\\n&quot;,&quot;color&quot;:&quot;gold&quot;&#125;,&#123;&quot;text&quot;:&quot;请使用 &quot;,&quot;color&quot;:&quot;gold&quot;&#125;,&#123;&quot;text&quot;:&quot;/function chestmenu:on &quot;,&quot;color&quot;:&quot;red&quot;,&quot;blod&quot;:true&#125;,&#123;&quot;text&quot;:&quot;以重置系统&quot;,&quot;color&quot;:&quot;gold&quot;&#125;]execute as @e[type=chest_minecart,tag=cm-export] at @s unless entity @e[type=chest_minecart,tag=cm-compare2] run tp @s ~ ~-1210 ~ 现在可以手持特定nbt物品*{id:”minecartmenu”}*打开菜单了通过断言判断玩家手持特定的物品，然后在直接玩家脸上糊个箱子矿车 1234567891011&#123; &quot;condition&quot;:&quot;minecraft:entity_properties&quot;, &quot;entity&quot;: &quot;this&quot;, &quot;predicate&quot;: &#123; &quot;equipment&quot;:&#123; &quot;mainhand&quot;:&#123; &quot;nbt&quot;: &quot;&#123;id:\\&quot;minecartmenu\\&quot;&#125;&quot; &#125; &#125; &#125;&#125; 还在持续更新，自己也有一些其他的想法想尝试实现，不过自己大概是没时间了。 鸣谢 雨弓，提供了核心思路 spg，dhp真好用 ⊙v⊙，UIN标签 特仑苏牛奶 更新列表 v1.0:发布 v1.1:修复了生成菜单时执行奇怪指令的BUG更改了矿车菜单的生成方式，现在可以手持特定nbt物品打开菜单了 v1.2:优化体验，增加关闭ui的预设函数，可直接调用 datapack链接：https://pan.baidu.com/s/1CSeJp3EH6_oOAo9VJE6VXA/提取码：96m5","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"同步blog到gitee","date":"2020-04-09T10:59:42.000Z","path":"2020/04/09/同步blog到gitee/","text":"其实github速度还算可以（也有可能是缓存的原因），不过我还是去看了下gitee。gitee毕竟还是在国内，速度肯定要比github快很多，而且仓库导入做得也不错，所以就同步一个吧。post还是在本地写完上传github，然后在gitee那里复制仓库内容导过去，不算方便，但也可接受。（有空再捣鼓一下直接传到gitee，应该不会太费劲，但那是后话了） 弄好之后试了一下，两边速度基本看不出太大差异，不过一些插件还是gitee那边快不少。内部页面的加载速度也是gitee更胜一筹。 两边的内容都是一样的（除非我忘了更新gitee），所以可以优先去访问gitee.io，毕竟还是快一点。 2021.8.26 更新 心血来潮去freenom白嫖了个免费的一级域名argon-gas.ml其实是一年免费+免费续期，不嫌麻烦倒还好）然后发现gitee的普通版gitpage不支持自定义域名，必须升级到pro版才能自定义，免费用户只有一个月试用。所以就给了github的page，操作并不复杂，很快就搞好了。但是github的page就无法查看了,提示需要备案:(挂梯子之后才发现可以正常浏览，而且域名也已经解析成功了。感觉有点奇怪，这个域名是国外的小众域名，DNS直接用的Freenom的，服务器托管在github上，不应该要求备案的啊。总之现在githubpage使用自定义域名后国内似乎上不去了，但挂梯子可正常浏览；giteepage没变化，国内还是看这个8 XD","tags":[{"name":"strange","slug":"strange","permalink":"http://yoursite.com/tags/strange/"}]},{"title":"尝试做一张cover","date":"2020-04-02T00:30:44.000Z","path":"2020/04/02/尝试做一张cover/","text":"最近呢，想要自定义一下首页的cover。毕竟这是个Minecraft的站点，所以想要以Minecraft为题材做这么一张图片。原图其实还蛮好看的，不过对比度似乎高了点，不太符合整体风格。所以我想用双色调风格，颜色也要偏向白&#x2F;灰&#x2F;黑之类的。再加上我是个CBer（？），所以要和命令元素相关，画面中最好有一些技术性内容。那么一番构（luan）思（xiang）之后，有了以下方案： 最初想放个命令方块在中间，周围放上各种奇怪的生物&#x2F;物品，但是考虑到最后要做双色调，颜色可能会失去不少。而且我不太会布局，所以作罢。 后来又想搭个小场景，画了十分钟建了一个，怎么看怎么丑，作罢。 又想用c4d，mi之类的渲染一张，但是水平有限，作罢。 所以最后还是选了第一种方案，只不过把各种奇怪生物全删掉了，留了一只creeper，最后出来的效果其实还不错，调色感觉也比较符合整体效果。 以后会多做几张类似风格的，再做个自动轮换岂不美哉。 2020.4.10 更新 2020.4.30 更新 配色纠结了好久，不过成品我觉得还蛮好看的 2020.6.25 更新 端午回来摸个鱼这几张是从一张跑酷地图（Phantom Run 1.0.4）截来的，作者是我们喜闻乐见的iWacky这几张相对于之前的几张来说，元素比较多，色调的比较奇怪，有种咖喱味(?) 2020.8.11 更新 地狱更新的几张图，感觉不是很满意，因为地狱确实挺暗的，场景也比较复杂，不太好整。看了看还是选了那张最红的当做cover，因为比较符合地狱的风格。 2021.2.25 更新","tags":[{"name":"strange","slug":"strange","permalink":"http://yoursite.com/tags/strange/"}]},{"title":"[1.15.2]Minecraft数据包---搬箱器","date":"2020-03-28T04:03:17.000Z","path":"2020/03/28/1-15-2-Minecraft数据包-搬箱器/","text":"该数据包允许玩家使用新增物品：搬箱器，来较为容易的搬运箱子。该数据包隶属于 cAsual woRk (2&#x2F;99) 效果演示B站视频演示: https://www.bilibili.com/video/BV1xE411P7UL 大致原理判断玩家手持特殊胡萝卜杆，然后右键时视线追踪 12execute if entity @s[distance=..7] if block ~ ~ ~ #carry:chest run summon minecraft:armor_stand ~ ~ ~ &#123;Tags:[&quot;carry-maker&quot;],Invisible:1b,Marker:1b,NoGravity:1b&#125;execute if entity @s[distance=..7] unless block ~ ~ ~ #carry:chest positioned ^ ^ ^0.005 run function carry:ray1 判断为箱子（包括陷阱箱）则在此处生成maker，然后将箱子的Items标签存进storage 1execute as @e[type=armor_stand,tag=carry-maker] at @s run data modify storage carry Items set from block ~ ~ ~ Items 清除箱子，并在最近玩家处生成箱子物品（偷懒了，这里的判断并不准确），将storage里标签再转回去 123execute as @e[type=armor_stand,tag=carry-maker] at @p[scores=&#123;carry-used=1&#125;] run summon item ~ ~1 ~ &#123;Tags:[&quot;carry&quot;],Item:&#123;id:&quot;minecraft:chest&quot;,Count:1b&#125;&#125;execute as @e[type=item,tag=carry,nbt=&#123;Item:&#123;id:&quot;minecraft:chest&quot;&#125;&#125;] run data modify entity @s Item.tag.BlockEntityTag.Items set from storage carry Itemsexecute as @e[type=item,tag=carry,nbt=&#123;Item:&#123;id:&quot;minecraft:chest&quot;&#125;&#125;] run data merge entity @s &#123;PickupDelay:0s&#125; 这个包总体来说挺简陋的，钓竿没做合成，没画材质，没做耐久（可能有空会更新吧。但是估计永远不会再重写了 鸣谢 dhp真好用 datapack链接：https://pan.baidu.com/s/1rVrsTMCo51jQzVNPJfv4fA提取码：193g","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]},{"title":"[1.15.2]Minecraft数据包---玩家头颅ID显示","date":"2020-03-27T13:53:10.000Z","path":"2020/03/27/1-15-2-Minecraft数据包-玩家头颅ID显示/","text":"该数据包使得玩家放置的玩家头颅能够以悬浮字形式在上方显示其用户ID，并支持使用彩色羊毛对其染色。该数据包隶属于 cAsual woRk (1&#x2F;99) 效果演示B站视频演示： 大致原理首先是通过进度判断玩家放下头颅，要注意的是头颅放在地上和墙上的id不同，当时我就被这个坑了好久（ 12345678910111213&#123; &quot;criteria&quot;: &#123; &quot;put_head&quot;: &#123; &quot;trigger&quot;: &quot;minecraft:placed_block&quot;, &quot;conditions&quot;: &#123; &quot;block&quot;: &quot;minecraft:player_head&quot; &#125; &#125; &#125;, &quot;rewards&quot;: &#123; &quot;function&quot;: &quot;skull:reset&quot; &#125;&#125; 12345678910111213&#123; &quot;criteria&quot;: &#123; &quot;put_head&quot;: &#123; &quot;trigger&quot;: &quot;minecraft:placed_block&quot;, &quot;conditions&quot;: &#123; &quot;block&quot;: &quot;minecraft:player_wall_head&quot; &#125; &#125; &#125;, &quot;rewards&quot;: &#123; &quot;function&quot;: &quot;skull:reset&quot; &#125;&#125; 然后通过视线追踪在头颅位置生成maker，并对齐方块中央。 12execute if entity @s[distance=..6] if block ~ ~ ~ #player_head positioned ^ ^ ^ run summon armor_stand ~ ~ ~ &#123;Invisible:1b,Invulnerable:1b,Marker:1b,Tags:[&quot;skull-name&quot;],Small:1b&#125;execute if entity @s[distance=..6] unless block ~ ~ ~ #player_head positioned ^ ^ ^0.005 run function skull:ray 然后通过牌子获取到头颅的用户ID，使用interpret拍扁 12execute as @e[type=armor_stand,tag=skull-name,tag=!b] at @s if block ~ ~ ~ #player_head run setblock ~ ~2 ~ minecraft:oak_sign&#123;Text1:&quot;&#123;\\&quot;block\\&quot;:\\&quot;~ ~-2 ~\\&quot;,\\&quot;nbt\\&quot;:\\&quot;Owner.Name\\&quot;,\\&quot;interpret\\&quot;:false&#125;&quot;,Text2:&quot;&#123;\\&quot;text\\&quot;:\\&quot;\\&quot;&#125;&quot;,Text3:&quot;&#123;\\&quot;text\\&quot;:\\&quot;\\&quot;&#125;&quot;,Text4:&quot;&#123;\\&quot;text\\&quot;:\\&quot;\\&quot;&#125;&quot;&#125;execute as @e[type=armor_stand,tag=skull-name,tag=!b] at @s if block ~ ~ ~ #player_head run data modify entity @s CustomName set from block ~ ~2 ~ Text1 最后是羊毛染色的相关处理，偷懒直接改了队伍color。 鸣谢 黑洞群的bcb大佬和黑猫大佬提供技术支持 kc提供了他的头（？） dhp真好用 datapack链接：https://pan.baidu.com/s/1EvwPPwuBLD-FEjmrnktelA提取码：t9qq","tags":[{"name":"commands","slug":"commands","permalink":"http://yoursite.com/tags/commands/"}]}]